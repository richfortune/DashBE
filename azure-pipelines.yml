trigger:
  branches:
    include:
      - main
      - Develop
      - DashBe.Domain

pool:
  vmImage: 'windows-latest'

steps:
  # Installa il .NET SDK
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.0.x'

  # Compila il progetto DashBe.Domain
  - script: dotnet build $(System.DefaultWorkingDirectory)\DashBe\DashBe.Domain\DashBe.Domain.csproj --configuration Release
    displayName: 'Build DashBe.Domain'

  # Esegui il packing per DashBe.Domain
  - script: dotnet pack $(System.DefaultWorkingDirectory)\DashBe\DashBe.Domain\DashBe.Domain.csproj --configuration Release
    displayName: 'Pack DashBe.Domain'

  # Copia il file .nupkg nella directory di staging
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)\DashBe\DashBe.Domain\bin\Release'
      Contents: '**/*.nupkg'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  # Debug: Elenca i file nella directory di staging
  - script: dir "$(Build.ArtifactStagingDirectory)"
    displayName: 'Debug Artifact Staging Directory'
  - script: |
      echo "Testing NuGet_PAT visibility"
      echo $env:NUGET_PAT
    displayName: 'Check NuGet_PAT Environment Variable'
    env:
      NUGET_PAT: $(NuGet_PAT)

  # Pubblica il file .nupkg al feed
  - task: NuGetCommand@2
    inputs:
      command: push
      packagesToPush: '$(Build.ArtifactStagingDirectory)/DashBe.Domain.1.0.0.nupkg'
      publishVstsFeed: 'DashBeArtifacts'
      allowPackageConflicts: true
